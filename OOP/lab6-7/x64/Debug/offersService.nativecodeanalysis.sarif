{
  "version": "2.1.0",
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.5.json",
  "runs": [
    {
      "results": [
        {
          "ruleId": "C26432",
          "message": {
            "text": "If you define or delete any default operation in the type 'class offer', define or delete them all (c.21)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offer.h"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 2,
                  "endLine": 27,
                  "endColumn": 2
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offer::{ctor}",
                  "decoratedName": "??0offer@@QEAA@AEBV0@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26485",
          "message": {
            "text": "Expression 'msg': No array to pointer decay (bounds.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/validate.h"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 6,
                  "endLine": 22,
                  "endColumn": 13
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "validate::offer",
                  "decoratedName": "?offer@validate@@SAXAEBV0@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26485",
          "message": {
            "text": "Expression 'msg': No array to pointer decay (bounds.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/validate.h"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 19,
                  "endLine": 23,
                  "endColumn": 20
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "validate::offer",
                  "decoratedName": "?offer@validate@@SAXAEBV0@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'offersService::offersService' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.h"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 2,
                  "endLine": 14,
                  "endColumn": 2
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::{ctor}",
                  "decoratedName": "??0offersService@@QEAA@AEAVoffersRepository@@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7,
                  "endLine": 29,
                  "endColumn": 14
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::findOffer",
                  "decoratedName": "?findOffer@offersService@@QEBA?BVoffer@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 11,
                  "endLine": 30,
                  "endColumn": 18
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::findOffer",
                  "decoratedName": "?findOffer@offersService@@QEBA?BVoffer@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 25,
                  "endLine": 51,
                  "endColumn": 32
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::sortOffers",
                  "decoratedName": "?sortOffers@offersService@@QEBA?AV?$vector@Voffer@@@@D@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 3,
                  "endLine": 67,
                  "endColumn": 17
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 31,
                  "endLine": 87,
                  "endColumn": 38
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 72,
                  "endLine": 87,
                  "endColumn": 86
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 43,
                  "endLine": 88,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 89,
                  "endLine": 88,
                  "endColumn": 103
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 43,
                  "endLine": 89,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 89,
                  "endLine": 89,
                  "endColumn": 103
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 43,
                  "endLine": 90,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 89,
                  "endLine": 90,
                  "endColumn": 103
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 31,
                  "endLine": 94,
                  "endColumn": 38
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 72,
                  "endLine": 94,
                  "endColumn": 86
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 43,
                  "endLine": 95,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 89,
                  "endLine": 95,
                  "endColumn": 103
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 43,
                  "endLine": 96,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 89,
                  "endLine": 96,
                  "endColumn": 103
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 43,
                  "endLine": 97,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 89,
                  "endLine": 97,
                  "endColumn": 103
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 31,
                  "endLine": 101,
                  "endColumn": 38
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 73,
                  "endLine": 101,
                  "endColumn": 87
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 43,
                  "endLine": 102,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 90,
                  "endLine": 102,
                  "endColumn": 104
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 43,
                  "endLine": 103,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 90,
                  "endLine": 103,
                  "endColumn": 104
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 43,
                  "endLine": 104,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 90,
                  "endLine": 104,
                  "endColumn": 104
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 31,
                  "endLine": 80,
                  "endColumn": 38
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 73,
                  "endLine": 80,
                  "endColumn": 87
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 43,
                  "endLine": 81,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 90,
                  "endLine": 81,
                  "endColumn": 104
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 43,
                  "endLine": 82,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 90,
                  "endLine": 82,
                  "endColumn": 104
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 43,
                  "endLine": 83,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 90,
                  "endLine": 83,
                  "endColumn": 104
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 31,
                  "endLine": 73,
                  "endColumn": 38
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 73,
                  "endLine": 73,
                  "endColumn": 87
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 43,
                  "endLine": 74,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 90,
                  "endLine": 74,
                  "endColumn": 104
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 43,
                  "endLine": 75,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 90,
                  "endLine": 75,
                  "endColumn": 104
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 43,
                  "endLine": 76,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 90,
                  "endLine": 76,
                  "endColumn": 104
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 7,
                  "endLine": 113,
                  "endColumn": 21
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 28,
                  "endLine": 114,
                  "endColumn": 35
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 3,
                  "endLine": 67,
                  "endColumn": 21
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 8,
                  "endLine": 72,
                  "endColumn": 34
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 13,
                  "endLine": 79,
                  "endColumn": 39
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 13,
                  "endLine": 86,
                  "endColumn": 26
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 9,
                  "endLine": 87,
                  "endColumn": 22
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 53,
                  "endLine": 87,
                  "endColumn": 67
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 72,
                  "endLine": 87,
                  "endColumn": 90
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 14,
                  "endLine": 88,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 36,
                  "endLine": 88,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 89,
                  "endLine": 88,
                  "endColumn": 107
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 14,
                  "endLine": 89,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 36,
                  "endLine": 89,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 89,
                  "endLine": 89,
                  "endColumn": 107
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 14,
                  "endLine": 90,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 36,
                  "endLine": 90,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 89,
                  "endLine": 90,
                  "endColumn": 107
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 13,
                  "endLine": 93,
                  "endColumn": 26
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 9,
                  "endLine": 94,
                  "endColumn": 22
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 53,
                  "endLine": 94,
                  "endColumn": 67
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 72,
                  "endLine": 94,
                  "endColumn": 90
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 14,
                  "endLine": 95,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 36,
                  "endLine": 95,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 89,
                  "endLine": 95,
                  "endColumn": 107
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 14,
                  "endLine": 96,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 36,
                  "endLine": 96,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 89,
                  "endLine": 96,
                  "endColumn": 107
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 14,
                  "endLine": 97,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 36,
                  "endLine": 97,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 89,
                  "endLine": 97,
                  "endColumn": 107
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 13,
                  "endLine": 100,
                  "endColumn": 26
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 9,
                  "endLine": 101,
                  "endColumn": 22
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 54,
                  "endLine": 101,
                  "endColumn": 68
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 73,
                  "endLine": 101,
                  "endColumn": 91
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 14,
                  "endLine": 102,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 36,
                  "endLine": 102,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 90,
                  "endLine": 102,
                  "endColumn": 108
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 14,
                  "endLine": 103,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 36,
                  "endLine": 103,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 90,
                  "endLine": 103,
                  "endColumn": 108
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 14,
                  "endLine": 104,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 36,
                  "endLine": 104,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 90,
                  "endLine": 104,
                  "endColumn": 108
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 9,
                  "endLine": 80,
                  "endColumn": 22
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 54,
                  "endLine": 80,
                  "endColumn": 68
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 73,
                  "endLine": 80,
                  "endColumn": 91
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 14,
                  "endLine": 81,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 36,
                  "endLine": 81,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 90,
                  "endLine": 81,
                  "endColumn": 108
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 14,
                  "endLine": 82,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 36,
                  "endLine": 82,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 90,
                  "endLine": 82,
                  "endColumn": 108
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 14,
                  "endLine": 83,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 36,
                  "endLine": 83,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 90,
                  "endLine": 83,
                  "endColumn": 108
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 9,
                  "endLine": 73,
                  "endColumn": 22
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 54,
                  "endLine": 73,
                  "endColumn": 68
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 73,
                  "endLine": 73,
                  "endColumn": 91
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 14,
                  "endLine": 74,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 36,
                  "endLine": 74,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 90,
                  "endLine": 74,
                  "endColumn": 108
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 14,
                  "endLine": 75,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 36,
                  "endLine": 75,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 90,
                  "endLine": 75,
                  "endColumn": 108
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 14,
                  "endLine": 76,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 36,
                  "endLine": 76,
                  "endColumn": 80
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 90,
                  "endLine": 76,
                  "endColumn": 108
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 7,
                  "endLine": 113,
                  "endColumn": 21
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offersService::filterOffers",
                  "decoratedName": "?filterOffers@offersService@@QEBA?AV?$vector@Voffer@@@@PEAD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/vector.h"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 9,
                  "endLine": 68,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "vector<offer>::push_back",
                  "decoratedName": "?push_back@?$vector@Voffer@@@@QEAAXAEBVoffer@@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/vector.h"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 9,
                  "endLine": 49,
                  "endColumn": 25
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "vector<offer>::[]",
                  "decoratedName": "??A?$vector@Voffer@@@@QEBAAEBVoffer@@H@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'vector<offer>::size' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/vector.h"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 15,
                  "endLine": 40,
                  "endColumn": 15
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "vector<offer>::size",
                  "decoratedName": "?size@?$vector@Voffer@@@@QEBA?BHXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/vector.h"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 9,
                  "endLine": 37,
                  "endColumn": 22
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "vector<offer>::end",
                  "decoratedName": "?end@?$vector@Voffer@@@@QEAAPEAVoffer@@XZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26432",
          "message": {
            "text": "If you define or delete any default operation in the type 'class vector<class offer>', define or delete them all (c.21)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/vector.h"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 6,
                  "endLine": 26,
                  "endColumn": 6
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "vector<offer>::{dtor}",
                  "decoratedName": "??1?$vector@Voffer@@@@QEAA@XZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26455",
          "message": {
            "text": "Default constructor should not throw. Declare it 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/vector.h"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 5,
                  "endLine": 20,
                  "endColumn": 5
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "vector<offer>::{ctor}",
                  "decoratedName": "??0?$vector@Voffer@@@@QEAA@H@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26409",
          "message": {
            "text": "Avoid calling new and delete explicitly, use std::make_unique<T> instead (r.11)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/vector.h"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 15
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "vector<offer>::{ctor}",
                  "decoratedName": "??0?$vector@Voffer@@@@QEAA@H@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26495",
          "message": {
            "text": "Variable 'offer::id' is uninitialized. Always initialize a member variable (type.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offer.h"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 2,
                  "endLine": 25,
                  "endColumn": 2
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offer::{ctor}",
                  "decoratedName": "??0offer@@QEAA@XZ",
                  "kind": "function"
                }
              ]
            }
          ],
          "properties": {
            "targetSymbol": "offer::id"
          }
        },
        {
          "ruleId": "C26495",
          "message": {
            "text": "Variable 'offer::price' is uninitialized. Always initialize a member variable (type.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/offer.h"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 2,
                  "endLine": 25,
                  "endColumn": 2
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "offer::{ctor}",
                  "decoratedName": "??0offer@@QEAA@XZ",
                  "kind": "function"
                }
              ]
            }
          ],
          "properties": {
            "targetSymbol": "offer::price"
          }
        },
        {
          "ruleId": "C26409",
          "message": {
            "text": "Avoid calling new and delete explicitly, use std::make_unique<T> instead (r.11)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/vector.h"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 21
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "vector<offer>::extend",
                  "decoratedName": "?extend@?$vector@Voffer@@@@AEAAXXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26400",
          "message": {
            "text": "Do not assign the result of an allocation or a function call with an owner<T> return value to a raw pointer, use owner<T> instead (i.11)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/vector.h"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 21,
                  "endLine": 12,
                  "endColumn": 27
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "vector<offer>::extend",
                  "decoratedName": "?extend@?$vector@Voffer@@@@AEAAXXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/vector.h"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 13,
                  "endLine": 14,
                  "endColumn": 30
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "vector<offer>::extend",
                  "decoratedName": "?extend@?$vector@Voffer@@@@AEAAXXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Facultate/OOP/lab6-7/vector.h"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 13,
                  "endLine": 14,
                  "endColumn": 30
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "vector<offer>::extend",
                  "decoratedName": "?extend@?$vector@Voffer@@@@AEAAXXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        }
      ],
      "tool": {
        "driver": {
          "name": "PREfast",
          "fullName": "PREfast Code Analysis",
          "version": "14.34.31937.0",
          "informationUri": "https://aka.ms/cpp/ca"
        }
      },
      "invocations": [
        {
          "executionSuccessful": true
        }
      ],
      "artifacts": [
        {
          "location": {
            "uri": "file:///C:/Facultate/OOP/lab6-7/offer.h"
          },
          "roles": [
            "resultFile"
          ],
          "hashes": {
            "sha-256": "3fab5601477309b48f006f474764dec9df44ed69606ac6416547517ce08700f8"
          }
        },
        {
          "location": {
            "uri": "file:///C:/Facultate/OOP/lab6-7/validate.h"
          },
          "roles": [
            "resultFile"
          ],
          "hashes": {
            "sha-256": "913f7a3ab1d81c269c0b491025cd7db858295f715d8ab7ffddfa9ccc58b50e6d"
          }
        },
        {
          "location": {
            "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.h"
          },
          "roles": [
            "resultFile"
          ],
          "hashes": {
            "sha-256": "06635ea16475b3d50ebf5a6b5c04c20998329de6ba22163b7a72a981b600df9e"
          }
        },
        {
          "location": {
            "uri": "file:///C:/Facultate/OOP/lab6-7/offersService.cpp"
          },
          "roles": [
            "analysisTarget",
            "resultFile"
          ],
          "hashes": {
            "sha-256": "6b89a047de62cdc1dae87d7d837d4c968dc0938159c5ff190841b6558f64bdff"
          }
        },
        {
          "location": {
            "uri": "file:///C:/Facultate/OOP/lab6-7/vector.h"
          },
          "roles": [
            "resultFile"
          ],
          "hashes": {
            "sha-256": "5d3ec9a31a4a82e13712bfd6fe53e61d1ae902f7cc34e1db85375e1fcf939b16"
          }
        },
        {
          "location": {
            "uri": "file:///c:/facultate/oop/lab6-7/offersrepository.h"
          },
          "hashes": {
            "sha-256": "db3133ce193c2531afd8324f1e182cc841e3ce31213ae2923b608086a94d7c9b"
          }
        }
      ]
    }
  ]
}